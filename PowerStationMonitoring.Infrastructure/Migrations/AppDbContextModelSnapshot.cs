// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerStationMonitoring.Infrastructure.Data;

#nullable disable

namespace PowerStationMonitoring.Infrasturcture.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PowerStationMonitoring.Core.Model.SensorData", b =>
                {
                    b.Property<int>("SensorDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SensorDataId"));

                    b.Property<decimal>("MeasuredValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MeasurementType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SensorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SensorDataId");

                    b.HasIndex("SensorId");

                    b.ToTable("SensorData");

                    b.HasData(
                        new
                        {
                            SensorDataId = 1,
                            MeasuredValue = 25.5m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7888),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 2,
                            MeasuredValue = 101325m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7895),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 3,
                            MeasuredValue = 0.1m,
                            MeasurementType = "Radiation",
                            Notes = "Normal",
                            SensorId = 3,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7901),
                            Unit = "mSv/h"
                        },
                        new
                        {
                            SensorDataId = 4,
                            MeasuredValue = 45.0m,
                            MeasurementType = "Humidity",
                            Notes = "Normal",
                            SensorId = 4,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7903),
                            Unit = "%"
                        },
                        new
                        {
                            SensorDataId = 5,
                            MeasuredValue = 10.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7904),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 6,
                            MeasuredValue = 26.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7906),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 7,
                            MeasuredValue = 12.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7908),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 8,
                            MeasuredValue = 102000m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7910),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 9,
                            MeasuredValue = 50.0m,
                            MeasurementType = "Humidity",
                            Notes = "Normal",
                            SensorId = 4,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7911),
                            Unit = "%"
                        },
                        new
                        {
                            SensorDataId = 10,
                            MeasuredValue = 0.2m,
                            MeasurementType = "Radiation",
                            Notes = "Normal",
                            SensorId = 3,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7913),
                            Unit = "mSv/h"
                        },
                        new
                        {
                            SensorDataId = 11,
                            MeasuredValue = 101500m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7915),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 12,
                            MeasuredValue = 101800m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7981),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 13,
                            MeasuredValue = 27.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7983),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 14,
                            MeasuredValue = 15.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7985),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 15,
                            MeasuredValue = 28.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7987),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 16,
                            MeasuredValue = 18.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7989),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 17,
                            MeasuredValue = 29.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7991),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 18,
                            MeasuredValue = 102500m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7992),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 19,
                            MeasuredValue = 0.3m,
                            MeasurementType = "Radiation",
                            Notes = "Normal",
                            SensorId = 3,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7994),
                            Unit = "mSv/h"
                        },
                        new
                        {
                            SensorDataId = 20,
                            MeasuredValue = 55.0m,
                            MeasurementType = "Humidity",
                            Notes = "Normal",
                            SensorId = 4,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7996),
                            Unit = "%"
                        },
                        new
                        {
                            SensorDataId = 21,
                            MeasuredValue = 20.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7998),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 22,
                            MeasuredValue = 30.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(7999),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 23,
                            MeasuredValue = 22.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8001),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 24,
                            MeasuredValue = 103000m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8003),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 25,
                            MeasuredValue = 60.0m,
                            MeasurementType = "Humidity",
                            Notes = "Normal",
                            SensorId = 4,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8004),
                            Unit = "%"
                        },
                        new
                        {
                            SensorDataId = 26,
                            MeasuredValue = 0.4m,
                            MeasurementType = "Radiation",
                            Notes = "Normal",
                            SensorId = 3,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8006),
                            Unit = "mSv/h"
                        },
                        new
                        {
                            SensorDataId = 27,
                            MeasuredValue = 103500m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8008),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 28,
                            MeasuredValue = 104000m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8009),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 29,
                            MeasuredValue = 31.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8011),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 30,
                            MeasuredValue = 25.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8013),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 31,
                            MeasuredValue = 25.5m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8015),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 32,
                            MeasuredValue = 101325m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8016),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 33,
                            MeasuredValue = 0.1m,
                            MeasurementType = "Radiation",
                            Notes = "Normal",
                            SensorId = 3,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8018),
                            Unit = "mSv/h"
                        },
                        new
                        {
                            SensorDataId = 34,
                            MeasuredValue = 45.0m,
                            MeasurementType = "Humidity",
                            Notes = "Normal",
                            SensorId = 4,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8020),
                            Unit = "%"
                        },
                        new
                        {
                            SensorDataId = 35,
                            MeasuredValue = 10.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8021),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 36,
                            MeasuredValue = 26.0m,
                            MeasurementType = "Temperature",
                            Notes = "Normal",
                            SensorId = 1,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8023),
                            Unit = "Celsius"
                        },
                        new
                        {
                            SensorDataId = 37,
                            MeasuredValue = 12.0m,
                            MeasurementType = "Flow",
                            Notes = "Normal",
                            SensorId = 5,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8025),
                            Unit = "L/min"
                        },
                        new
                        {
                            SensorDataId = 38,
                            MeasuredValue = 102000m,
                            MeasurementType = "Pressure",
                            Notes = "Normal",
                            SensorId = 2,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8027),
                            Unit = "Pascal"
                        },
                        new
                        {
                            SensorDataId = 39,
                            MeasuredValue = 50.0m,
                            MeasurementType = "Humidity",
                            Notes = "Normal",
                            SensorId = 4,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8028),
                            Unit = "%"
                        },
                        new
                        {
                            SensorDataId = 40,
                            MeasuredValue = 0.2m,
                            MeasurementType = "Radiation",
                            Notes = "Normal",
                            SensorId = 3,
                            Timestamp = new DateTime(2025, 4, 29, 18, 15, 1, 713, DateTimeKind.Utc).AddTicks(8030),
                            Unit = "mSv/h"
                        });
                });

            modelBuilder.Entity("PowerStationMonitoring.Domain.Model.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SensorId"));

                    b.Property<string>("SensorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SensorType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SlaveId")
                        .HasColumnType("int");

                    b.HasKey("SensorId");

                    b.ToTable("Sensors");

                    b.HasData(
                        new
                        {
                            SensorId = 1,
                            SensorName = "Temperature",
                            SensorType = "Temperature",
                            SlaveId = 1
                        },
                        new
                        {
                            SensorId = 2,
                            SensorName = "Pressure",
                            SensorType = "Pressure",
                            SlaveId = 2
                        },
                        new
                        {
                            SensorId = 3,
                            SensorName = "Radiation",
                            SensorType = "Radiation",
                            SlaveId = 3
                        },
                        new
                        {
                            SensorId = 4,
                            SensorName = "Humidity",
                            SensorType = "Humitdity",
                            SlaveId = 4
                        },
                        new
                        {
                            SensorId = 5,
                            SensorName = "Flow",
                            SensorType = "Flow",
                            SlaveId = 5
                        });
                });

            modelBuilder.Entity("PowerStationMonitoring.Core.Model.SensorData", b =>
                {
                    b.HasOne("PowerStationMonitoring.Domain.Model.Sensor", "Sensor")
                        .WithMany("SensorData")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("PowerStationMonitoring.Domain.Model.Sensor", b =>
                {
                    b.Navigation("SensorData");
                });
#pragma warning restore 612, 618
        }
    }
}
